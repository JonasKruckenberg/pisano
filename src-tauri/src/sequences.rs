use serde_repr::{Deserialize_repr, Serialize_repr};

#[derive(Debug, Deserialize_repr, Serialize_repr)]
#[repr(u8)]
pub enum Sequence {
    Fibonacci = 0,
    Primes,
    Lucas,
    Ramanujan,
    SHC,
    Pronic,
    Composite,
}

impl Sequence {
    pub fn get_numbers<'a>(&self) -> &'a [u128] {
        match self {
            Sequence::Fibonacci => &FIBONACCI,
            Sequence::Primes => &PRIMES,
            Sequence::Lucas => &LUCAS,
            Sequence::Ramanujan => &RAMANUJAN,
            Sequence::SHC => &SHC,
            Sequence::Pronic => &PRONIC,
            Sequence::Composite => &COMPOSITE,
        }
    }
}

pub const FIBONACCI: [u128; 100] = [
    0,
    1,
    1,
    2,
    3,
    5,
    8,
    13,
    21,
    34,
    55,
    89,
    144,
    233,
    377,
    610,
    987,
    1597,
    2584,
    4181,
    6765,
    10946,
    17711,
    28657,
    46368,
    75025,
    121393,
    196418,
    317811,
    514229,
    832040,
    1346269,
    2178309,
    3524578,
    5702887,
    9227465,
    14930352,
    24157817,
    39088169,
    63245986,
    102334155,
    165580141,
    267914296,
    433494437,
    701408733,
    1134903170,
    1836311903,
    2971215073,
    4807526976,
    7778742049,
    12586269025,
    20365011074,
    32951280099,
    53316291173,
    86267571272,
    139583862445,
    225851433717,
    365435296162,
    591286729879,
    956722026041,
    1548008755920,
    2504730781961,
    4052739537881,
    6557470319842,
    10610209857723,
    17167680177565,
    27777890035288,
    44945570212853,
    72723460248141,
    117669030460994,
    190392490709135,
    308061521170129,
    498454011879264,
    806515533049393,
    1304969544928657,
    2111485077978050,
    3416454622906707,
    5527939700884757,
    8944394323791464,
    14472334024676221,
    23416728348467685,
    37889062373143906,
    61305790721611591,
    99194853094755497,
    160500643816367088,
    259695496911122585,
    420196140727489673,
    679891637638612258,
    1100087778366101931,
    1779979416004714189,
    2880067194370816120,
    4660046610375530309,
    7540113804746346429,
    12200160415121876738,
    19740274219868223167,
    31940434634990099905,
    51680708854858323072,
    83621143489848422977,
    135301852344706746049,
    218922995834555169026,
];

pub const PRIMES: [u128; 100] = [
    2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97,
    101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,
    197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307,
    311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421,
    431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541,
];

// Lucas numbers
pub const LUCAS: [u128; 100] = [
    2,
    1,
    3,
    4,
    7,
    11,
    18,
    29,
    47,
    76,
    123,
    199,
    322,
    521,
    843,
    1364,
    2207,
    3571,
    5778,
    9349,
    15127,
    24476,
    39603,
    64079,
    103682,
    167761,
    271443,
    439204,
    710647,
    1149851,
    1860498,
    3010349,
    4870847,
    7881196,
    12752043,
    20633239,
    33385282,
    54018521,
    87403803,
    141422324,
    228826127,
    370248451,
    599074578,
    969323029,
    1568397607,
    2537720636,
    4106118243,
    6643838879,
    10749957122,
    17393796001,
    28143753123,
    45537549124,
    73681302247,
    119218851371,
    192900153618,
    312119004989,
    505019158607,
    817138163596,
    1322157322203,
    2139295485799,
    3461452808002,
    5600748293801,
    9062201101803,
    14662949395604,
    23725150497407,
    38388099893011,
    62113250390418,
    100501350283429,
    162614600673847,
    263115950957276,
    425730551631123,
    688846502588399,
    1114577054219522,
    1803423556807921,
    2918000611027443,
    4721424167835364,
    7639424778862807,
    12360848946698171,
    20000273725560978,
    32361122672259149,
    52361396397820127,
    84722519070079276,
    137083915467899403,
    221806434537978679,
    358890350005878082,
    580696784543856761,
    939587134549734843,
    1520283919093591604,
    2459871053643326447,
    3980154972736918051,
    6440026026380244498,
    10420180999117162549,
    16860207025497407047,
    27280388024614569596,
    44140595050111976643,
    71420983074726546239,
    115561578124838522882,
    186982561199565069121,
    302544139324403592003,
    489526700523968661124,
];

// Ramanujan tau function
pub const RAMANUJAN: [u128; 100] = [
    1,
    24,
    252,
    1472,
    4830,
    6048,
    16744,
    84480,
    113643,
    115920,
    534612,
    370944,
    577738,
    401856,
    1217160,
    987136,
    6905934,
    2727432,
    10661420,
    7109760,
    4219488,
    12830688,
    18643272,
    21288960,
    25499225,
    13865712,
    73279080,
    24647168,
    128406630,
    29211840,
    52843168,
    196706304,
    134722224,
    165742416,
    80873520,
    167282496,
    182213314,
    255874080,
    145589976,
    408038400,
    308120442,
    101267712,
    17125708,
    786948864,
    548895690,
    447438528,
    2687348496,
    248758272,
    1696965207,
    611981400,
    1740295368,
    850430336,
    1596055698,
    1758697920,
    2582175960,
    1414533120,
    2686677840,
    3081759120,
    5189203740,
    1791659520,
    6956478662,
    1268236032,
    1902838392,
    2699296768,
    2790474540,
    3233333376,
    15481826884,
    10165534848,
    4698104544,
    1940964480,
    9791485272,
    9600560640,
    1463791322,
    4373119536,
    6425804700,
    15693610240,
    8951543328,
    3494159424,
    38116845680,
    4767866880,
    1665188361,
    7394890608,
    29335099668,
    6211086336,
    33355661220,
    411016992,
    32358470760,
    45164021760,
    24992917110,
    13173496560,
    9673645072,
    27442896384,
    13316478336,
    64496363904,
    51494658600,
    49569988608,
    75013568546,
    40727164968,
    60754911516,
    37534859200,
];

// Superior highly composite numbers
pub const SHC: [u128; 37] = [
    2,
    6,
    12,
    60,
    120,
    360,
    2520,
    5040,
    55440,
    720720,
    1441440,
    4324320,
    21621600,
    367567200,
    6983776800,
    13967553600,
    321253732800,
    2248776129600,
    65214507758400,
    195643523275200,
    6064949221531200,
    12129898443062400,
    448806242393308800,
    18401055938125660800,
    791245405339403414400,
    37188534050951960476800,
    185942670254759802384000,
    9854961523502269526352000,
    581442729886633902054768000,
    1162885459773267804109536000,
    12791740057505945845204896000,
    780296143507862696557498656000,
    2340888430523588089672495968000,
    156839524845080402008057229856000,
    11135606264000708542572063319776000,
    812899257272051723607760622343648000,
    64219041324492086165013089165148192000,
];

// Pronic numbers
pub const PRONIC: [u128; 100] = [
    0, 2, 6, 12, 20, 30, 42, 56, 72, 90, 110, 132, 156, 182, 210, 240, 272, 306, 342, 380, 420,
    462, 506, 552, 600, 650, 702, 756, 812, 870, 930, 992, 1056, 1122, 1190, 1260, 1332, 1406,
    1482, 1560, 1640, 1722, 1806, 1892, 1980, 2070, 2162, 2256, 2352, 2450, 2550, 2652, 2756, 2862,
    2970, 3080, 3192, 3306, 3422, 3540, 3660, 3782, 3906, 4032, 4160, 4290, 4422, 4556, 4692, 4830,
    4970, 5112, 5256, 5402, 5550, 5700, 5852, 6006, 6162, 6320, 6480, 6642, 6806, 6972, 7140, 7310,
    7482, 7656, 7832, 8010, 8190, 8372, 8556, 8742, 8930, 9120, 9312, 9506, 9702, 9900,
];

// Composite numbers
pub const COMPOSITE: [u128; 100] = [
    4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38,
    39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69,
    70, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99,
    100, 102, 104, 105, 106, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
    124, 125, 126, 128, 129, 130, 132, 133,
];
